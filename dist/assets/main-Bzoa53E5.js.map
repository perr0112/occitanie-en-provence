{"version":3,"file":"main-Bzoa53E5.js","sources":["../../src/intro.js"],"sourcesContent":["import gsap from \"gsap\";\nimport CustomEase from \"gsap/CustomEase\";\n\ngsap.registerPlugin(CustomEase);\n\nCustomEase.create(\"primary-ease\", \"0.62, 0.05, 0.01, 0.99\");\n\nconst BASIC_DURATION = 1.2;\nconst btnExperience = document.querySelector('.body__btn')\n\nconst loader = () => {\n    const textContainers = document.querySelectorAll(\".animated-title\");\n\n    const tl = gsap.timeline({\n        defaults: {\n            duration: BASIC_DURATION,\n            ease: \"primary-ease\"\n        }\n    });\n\n    textContainers.forEach((tContainer) => {\n        tContainer.innerHTML = tContainer.innerHTML\n            .split(/(<span[^>]*>.*?<\\/span>|\\s+)/g)\n            .map(segment => {\n                if (segment.startsWith(\"<span\") || segment.trim() === \"\") return segment;\n                return `<span class=\"word\">${segment}</span>`;\n            })\n            .join(\"\");\n    \n        const words = tContainer.querySelectorAll(\".word\");\n\n        gsap.fromTo(\n            words,\n            { opacity: 0, y: 20 },\n            {\n                opacity: 1,\n                y: 0,\n                duration: 1.2,\n                ease: \"primary-ease\",\n                stagger: { amount: 0.3, from: \"random\" },\n                onComplete: () => {\n                    gsap.to(document.documentElement, {\n                        \"--opacity-after-circle\": \"1\",\n                        duration: 0,\n                        onComplete: () => {\n                            setTimeout(() => {\n                                gsap.to('.word', {\n                                    y: -20,\n                                    opacity: 0,\n                                    stagger: { amount: 0.3, from: \"random\" },\n                                    onStart: () => {\n                                        document.documentElement.style.setProperty(\"--opacity-after-circle\", \"0\");\n                                    },\n                                    onComplete: () => {\n                                        changeText();\n                                    }\n                                });\n                            }, 3000);\n                        }\n                    });\n                }\n            }\n        );\n    });\n};\n\nconst changeText = () => {\n    gsap.set('.v-1', {\n        autoAlpha: 0,\n    });\n\n    gsap.set('.v-1', {\n        display: 'none'\n    })\n\n    const textContainers = document.querySelectorAll(\".v-2 .animated-title\");\n\n    console.log(textContainers)\n\n    textContainers.forEach((tContainer) => {\n        tContainer.innerHTML = tContainer.innerHTML\n            .split(/(<span[^>]*>.*?<\\/span>|\\s+)/g)\n            .map(segment => {\n                if (segment.startsWith(\"<span\") || segment.trim() === \"\") return segment;\n                return `<span class=\"word\">${segment}</span>`;\n            })\n            .join(\"\");\n\n        const words = tContainer.querySelectorAll(\".word\");\n\n        gsap.set('.word', {autoAlpha: 0})\n\n        gsap.set('.v-2', {\n            autoAlpha: 1,\n            display: 'block',\n        });\n\n        gsap.to(\n            words,\n            // { autoAlpha: 0, y: 20 },\n            {\n                autoAlpha: 1,\n                y: 0,\n                duration: BASIC_DURATION,\n                ease: \"primary-ease\",\n                stagger: { amount: 0.3, from: \"random\" }\n            },\n        );\n    });\n\n};\n\nconst transition = () => {\n    const href = window.location.origin + \"/map.html\"\n    console.log(href, window, window.location)\n    const transition = document.querySelector('.transition-experience')\n\n    const tl = gsap.timeline({\n        defaults: {\n            ease: \"primary-ease\",\n            duration: BASIC_DURATION\n        }\n    })\n\n    tl.set('html', {\n        cursor: 'progress'\n    })\n\n    tl.to(transition, {\n        y: '-100%',\n        onComplete: () => {\n            window.location.href = href;\n        }\n    })\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", loader);\nbtnExperience.addEventListener('click', transition)\n"],"names":["gsap","CustomEase","BASIC_DURATION","btnExperience","loader","textContainers","tContainer","segment","words","changeText","transition","href","tl"],"mappings":"oDAGAA,EAAK,eAAeC,CAAU,EAE9BA,EAAW,OAAO,eAAgB,wBAAwB,EAE1D,MAAMC,EAAiB,IACjBC,EAAgB,SAAS,cAAc,YAAY,EAEnDC,EAAS,IAAM,CACjB,MAAMC,EAAiB,SAAS,iBAAiB,iBAAiB,EAEvDL,EAAK,SAAS,CACrB,SAAU,CACN,SAAUE,EACV,KAAM,cAClB,CACK,CAAA,EAEDG,EAAe,QAASC,GAAe,CACnCA,EAAW,UAAYA,EAAW,UAC7B,MAAM,+BAA+B,EACrC,IAAIC,GACGA,EAAQ,WAAW,OAAO,GAAKA,EAAQ,KAAM,IAAK,GAAWA,EAC1D,sBAAsBA,CAAO,SACvC,EACA,KAAK,EAAE,EAEZ,MAAMC,EAAQF,EAAW,iBAAiB,OAAO,EAEjDN,EAAK,OACDQ,EACA,CAAE,QAAS,EAAG,EAAG,EAAI,EACrB,CACI,QAAS,EACT,EAAG,EACH,SAAU,IACV,KAAM,eACN,QAAS,CAAE,OAAQ,GAAK,KAAM,QAAU,EACxC,WAAY,IAAM,CACdR,EAAK,GAAG,SAAS,gBAAiB,CAC9B,yBAA0B,IAC1B,SAAU,EACV,WAAY,IAAM,CACd,WAAW,IAAM,CACbA,EAAK,GAAG,QAAS,CACb,EAAG,IACH,QAAS,EACT,QAAS,CAAE,OAAQ,GAAK,KAAM,QAAU,EACxC,QAAS,IAAM,CACX,SAAS,gBAAgB,MAAM,YAAY,yBAA0B,GAAG,CAC3E,EACD,WAAY,IAAM,CACdS,EAAY,CACpD,CACA,CAAiC,CACJ,EAAE,GAAI,CACnC,CACA,CAAqB,CACrB,CACA,CACS,CACT,CAAK,CACL,EAEMA,EAAa,IAAM,CACrBT,EAAK,IAAI,OAAQ,CACb,UAAW,CACnB,CAAK,EAEDA,EAAK,IAAI,OAAQ,CACb,QAAS,MACZ,CAAA,EAED,MAAMK,EAAiB,SAAS,iBAAiB,sBAAsB,EAEvE,QAAQ,IAAIA,CAAc,EAE1BA,EAAe,QAASC,GAAe,CACnCA,EAAW,UAAYA,EAAW,UAC7B,MAAM,+BAA+B,EACrC,IAAIC,GACGA,EAAQ,WAAW,OAAO,GAAKA,EAAQ,KAAM,IAAK,GAAWA,EAC1D,sBAAsBA,CAAO,SACvC,EACA,KAAK,EAAE,EAEZ,MAAMC,EAAQF,EAAW,iBAAiB,OAAO,EAEjDN,EAAK,IAAI,QAAS,CAAC,UAAW,CAAC,CAAC,EAEhCA,EAAK,IAAI,OAAQ,CACb,UAAW,EACX,QAAS,OACrB,CAAS,EAEDA,EAAK,GACDQ,EAEA,CACI,UAAW,EACX,EAAG,EACH,SAAUN,EACV,KAAM,eACN,QAAS,CAAE,OAAQ,GAAK,KAAM,QAAQ,CACzC,CACJ,CACT,CAAK,CAEL,EAEMQ,EAAa,IAAM,CACrB,MAAMC,EAAO,OAAO,SAAS,OAAS,YACtC,QAAQ,IAAIA,EAAM,OAAQ,OAAO,QAAQ,EACzC,MAAMD,EAAa,SAAS,cAAc,wBAAwB,EAE5DE,EAAKZ,EAAK,SAAS,CACrB,SAAU,CACN,KAAM,eACN,SAAUE,CACtB,CACK,CAAA,EAEDU,EAAG,IAAI,OAAQ,CACX,OAAQ,UACX,CAAA,EAEDA,EAAG,GAAGF,EAAY,CACd,EAAG,QACH,WAAY,IAAM,CACd,OAAO,SAAS,KAAOC,CACnC,CACK,CAAA,CACL,EAEA,SAAS,iBAAiB,mBAAoBP,CAAM,EACpDD,EAAc,iBAAiB,QAASO,CAAU"}